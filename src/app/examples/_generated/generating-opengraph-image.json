{
  "meta": {
    "kind": "metadata",
    "path": "generating-opengraph-image",
    "title": "Generating OpenGraph Image",
    "description": "\nYou can programmatically generate images using code.\nGenerate a route segment's shared image by creating an opengraph-image or twitter-image route that default exports a function.\n  ",
    "doc": "https://nextjs.org/docs/app/api-reference/file-conventions/metadata/opengraph-image#generate-images-using-code-js-ts-tsx"
  },
  "codes": {
    "[slug]/opengraph-image.tsx": "import { ImageResponse } from \"next/og\";\n\nexport const alt = \"ðŸ¤“\";\nexport const size = {\n  width: 1200,\n  height: 630,\n};\nexport const contentType = \"image/png\";\n\ntype Props = {\n  params: {\n    slug: string;\n  };\n};\n\nexport default async function Image({ params }: Props) {\n  return new ImageResponse(\n    <div\n      style={{\n        fontSize: 240,\n        background: \"#e5e7eb\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {alt} {params.slug}\n    </div>,\n  );\n}\n",
    "[slug]/page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { notFound } from \"next/navigation\";\nimport { MetaList } from \"../../_components/metaList\";\n\nconst path = \"generating-opengraph-image/foo\";\n\ntype Props = {\n  params: {\n    slug: string;\n  };\n};\n\nexport default function Page({ params }: Props) {\n  if (params.slug !== \"foo\") {\n    return notFound();\n  }\n\n  return (\n    <Boundary label={`/${path}`}>\n      <MetaList path={path} showOnlyImage />\n    </Boundary>\n  );\n}\n",
    "opengraph-image.tsx": "import { ImageResponse } from \"next/og\";\n\nexport const alt = \"ðŸ¥³\";\nexport const size = {\n  width: 1200,\n  height: 630,\n};\nexport const contentType = \"image/png\";\n\nexport default async function Image() {\n  // when you want to return an image when only bots\n  // const { isBot } = userAgent({ headers: headers() });\n\n  return new ImageResponse(\n    <div\n      style={{\n        fontSize: 240,\n        background: \"#e5e7eb\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {alt}\n    </div>,\n  );\n}\n",
    "page.tsx": "import { Boundary } from \"@/app/_components/boundary\";\nimport { Link } from \"@/app/_components/link\";\nimport { MetaList } from \"../_components/metaList\";\n\nconst path = \"generating-opengraph-image\";\n\nexport default function Page() {\n  return (\n    <Boundary label={`/${path}`}>\n      <div className=\"space-y-3\">\n        <div className=\"text-right\">\n          <Link href=\"/examples/generating-opengraph-image/foo?file-path=[slug]/page.tsx\">\n            [slug] Page\n          </Link>\n        </div>\n        <MetaList path={path} showOnlyImage />\n      </div>\n    </Boundary>\n  );\n}\n"
  }
}