{
  "meta": {
    "kind": "intercepting routes",
    "path": "intercepting",
    "title": "Intercepting Routes",
    "description": "\nIntercepting routes allows you to load a route from another part of your application within the current layout.\nThis routing paradigm can be useful when you want to display the content of a route without the user switching to a different context.\n\n(.) to match segments on the same level\n(..) to match segments one level above\n(..)(..) to match segments two levels above\n(...) to match segments from the root app directory\n    ",
    "doc": "https://nextjs.org/docs/app/building-your-application/routing/intercepting-routes"
  },
  "codes": {
    "page.tsx": "import Link from \"next/link\";\n\nexport default function Page() {\n  return (\n    <Link\n      href=\"/examples/intercepting/sign-up\"\n      className=\"w-fit border border-gray-600 py-1 px-2 rounded-md\"\n    >\n      sign up\n    </Link>\n  );\n}\n",
    "layout.tsx": "import React, { type PropsWithChildren } from \"react\";\n\ntype Props = PropsWithChildren<{\n  dialog: React.ReactNode;\n}>;\n\nexport default function Layout({ dialog, children }: Props) {\n  return (\n    <>\n      {children}\n      {dialog}\n    </>\n  );\n}\n",
    "sign-up/page.tsx": "import { SignUp } from \"../_components/signUp\";\n\nexport default function Page() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <SignUp />\n      <p>\n        When you access this path directly, this page won't be intercepted by\n        \"@dialog/(..)intercepting/sign-up/page.tsx\".\n      </p>\n    </div>\n  );\n}\n",
    "_components/signUp.tsx": "\"use client\";\n\nimport { usePathname } from \"next/navigation\";\nimport { type PropsWithChildren } from \"react\";\n\nexport function SignUp() {\n  const pathname = usePathname();\n\n  return (\n    <div className=\"flex flex-col gap-4 items-center\">\n      <h2 className=\"text-xl\">Sign up</h2>\n      <Button>Google</Button>\n      <Button>Facebook</Button>\n      <Button>GitHub</Button>\n      <p className=\"text-sm\">current path is \"{pathname}\"</p>\n    </div>\n  );\n}\n\nfunction Button({ children }: PropsWithChildren) {\n  return (\n    <button\n      type=\"button\"\n      className=\"border border-gray-300 rounded-md w-60 py-1\"\n    >\n      {children}\n    </button>\n  );\n}\n",
    "@dialog/default.tsx": "export default function Default() {\n  return null;\n}\n",
    "@dialog/(..)intercepting/sign-up/page.tsx": "\"use client\";\n\nimport { SignUp } from \"@/app/examples/intercepting/_components/signUp\";\n\nexport default function Page() {\n  return (\n    <dialog\n      open\n      className=\"w-1/2 bg-gray-700 text-gray-200 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n    >\n      <div className=\"p-6 flex flex-col items-center gap-4\">\n        <SignUp />\n        <div className=\"flex flex-col gap-6 items-center\">\n          <p className=\"text-sm text-gray-300\">\n            \"@dialog/(..)intercepting/sign-up/page.tsx\" has been intercepting\n            \"items/intercepting/sign-up\"\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => window.location.reload()}\n            className=\"border border-gray-500 py-1 px-4 rounded-md w-fit\"\n          >\n            Let's reload this page\n          </button>\n        </div>\n      </div>\n    </dialog>\n  );\n}\n"
  }
}