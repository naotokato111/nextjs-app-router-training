{
  "meta": {
    "kind": "showcases",
    "path": "service-e-commerce",
    "title": "Electronic Commerce",
    "description": "\nIntercepting routes allows you to load a route from another part of your application within the current layout.\nThis routing paradigm can be useful when you want to display the content of a route without the user switching to a different context.\n    ",
    "doc": "https://nextjs.org/docs/app/building-your-application/routing/intercepting-routes"
  },
  "codes": {
    "mock.ts": "export type Item = {\n  id: number;\n  name: string;\n  description: string;\n  thumbnail: string;\n};\n\nexport const items = (<const>[\n  {\n    id: 0,\n    name: \"Apple\",\n    description:\n      \"An apple is a sweet to tart fruit, typically red, green, or yellow, grown on apple trees.\",\n    thumbnail: \"üçé\",\n  },\n  {\n    id: 1,\n    name: \"Hamburger\",\n    description:\n      \"A hamburger is a sandwich with a cooked beef patty between buns, often served with toppings.\",\n    thumbnail: \"üçî\",\n  },\n]) satisfies Item[];\n",
    "_utils/auth.ts": "export const signInKey = \"service-e-commerce-sign-in\";\nexport const path = \"/examples/service-e-commerce\";\n\nexport async function isSignIn() {\n  const { cookies } = await import(\"next/headers\");\n  const cookiesList = cookies();\n  const signInCookie = cookiesList.get(signInKey);\n\n  return signInCookie?.value === \"true\";\n}\n\nexport function signIn() {\n  document.cookie = `${signInKey}=true; path=${path};`;\n}\n\nexport function signOut() {\n  document.cookie = `${signInKey}=; path=${path}; Max-Age=0;`;\n}\n",
    "_components/skeleton.tsx": "import { ImageBox, ImageList } from \"./imageList\";\n\ntype Props = {\n  num: number;\n};\n\nexport function ImageSkeletons({ num }: Props) {\n  return (\n    <ImageList>\n      {[...new Array(num)].map((_, i) => (\n        <ImageBox key={i}>\n          <div className=\"bg-gray-600 animate-pulse h-full w-full rounded-md\" />\n        </ImageBox>\n      ))}\n    </ImageList>\n  );\n}\n",
    "_components/section.tsx": "import { type PropsWithChildren } from \"react\";\n\ntype Props = PropsWithChildren<{\n  title: string;\n}>;\n\nexport function Section({ title, children }: Props) {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <h2 className=\"text-lg font-semibold\">{title}</h2>\n      <div>{children}</div>\n    </div>\n  );\n}\n",
    "_components/pageWrapper.tsx": "import { PropsWithChildren } from \"react\";\n\nexport function PageWrapper({ children }: PropsWithChildren) {\n  return <div className=\"bg-zinc-700 relative h-96\">{children}</div>;\n}\n",
    "_components/imageList.tsx": "import { type PropsWithChildren } from \"react\";\nimport Link from \"next/link\";\n\nexport function ImageList({ children }: PropsWithChildren) {\n  return <div className=\"flex gap-5\">{children}</div>;\n}\n\nexport function ImageBox({ children }: PropsWithChildren) {\n  return (\n    <div className=\"w-24 h-24 rounded-md flex items-center justify-center\">\n      {children}\n    </div>\n  );\n}\n\nexport function ImageItem({\n  id,\n  thumbnail,\n}: {\n  id: number;\n  thumbnail: string;\n}) {\n  return (\n    <Link href={`/examples/service-e-commerce/foods/${id}`}>\n      <ImageBox>\n        <div className=\"w-full h-full flex items-center justify-center bg-gray-600 rounded-md\">\n          <span className=\"text-3xl\">{thumbnail}</span>\n        </div>\n      </ImageBox>\n    </Link>\n  );\n}\n",
    "_components/button.tsx": "\"use client\";\n\nimport { type PropsWithChildren } from \"react\";\n\ntype Props = PropsWithChildren<{\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}>;\n\nexport function Button({ onClick, children }: Props) {\n  return (\n    <button\n      onClick={onClick}\n      className=\"border border-gray-500 px-2 rounded-md w-full hover:text-blue-300 hover:border-blue-300\"\n    >\n      {children}\n    </button>\n  );\n}\n",
    "_components/authButton.tsx": "\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { signIn, signOut } from \"../_utils/auth\";\nimport { Button } from \"./button\";\n\ntype Props = {\n  type: \"signIn\" | \"signOut\";\n  // intercepting router doesn't support push/replace\n  // see https://github.com/vercel/next.js/issues/49662#issuecomment-1550170841\n  isInterceptingRouter?: boolean;\n};\n\nexport function AuthButton({ type, isInterceptingRouter }: Props) {\n  const router = useRouter();\n\n  const onClick = () => {\n    if (type === \"signIn\") {\n      signIn();\n    } else {\n      signOut();\n    }\n\n    if (isInterceptingRouter) {\n      router.back();\n    } else {\n      router.replace(\"/examples/service-e-commerce\");\n    }\n\n    // purge Layout(server component) to refresh cache\n    router.refresh();\n  };\n\n  return (\n    <Button onClick={onClick}>\n      {type === \"signIn\" ? \"sign in\" : \"sign out\"}\n    </Button>\n  );\n}\n",
    "(public)/page.tsx": "import { Suspense } from \"react\";\nimport { Section } from \"../_components/section\";\nimport { items } from \"../mock\";\nimport { ImageSkeletons } from \"../_components/skeleton\";\nimport { ImageItem, ImageList } from \"../_components/imageList\";\nimport Link from \"next/link\";\nimport { isSignIn } from \"../_utils/auth\";\n\nexport default async function Page() {\n  const signedIn = await isSignIn();\n\n  return (\n    <>\n      <Section title=\"All Foods\">\n        <Suspense fallback={<ImageSkeletons num={3} />}>\n          <Items />\n        </Suspense>\n      </Section>\n      {signedIn && (\n        <Link\n          href=\"/examples/service-e-commerce/admin\"\n          className=\"text-gray-300\"\n        >\n          Admin\n        </Link>\n      )}\n    </>\n  );\n}\n\nasync function Items() {\n  // e.g. fetch\n  const allItems = await new Promise<typeof items>((resolve) => {\n    setTimeout(() => resolve(items), 2000);\n  });\n\n  return (\n    <ImageList>\n      {allItems.map(({ id, thumbnail }) => (\n        <ImageItem id={id} thumbnail={thumbnail} key={id} />\n      ))}\n    </ImageList>\n  );\n}\n",
    "(public)/layout.tsx": "import { type PropsWithChildren } from \"react\";\nimport Link from \"next/link\";\nimport { isSignIn } from \"../_utils/auth\";\nimport { AuthButton } from \"../_components/authButton\";\nimport { PageWrapper } from \"../_components/pageWrapper\";\n\ntype Props = PropsWithChildren<{\n  cart: React.ReactNode;\n  dialog: React.ReactNode;\n}>;\n\nexport default async function Layout({ cart, dialog, children }: Props) {\n  const signedIn = await isSignIn();\n\n  return (\n    <PageWrapper>\n      <header className=\"w-full flex items-center justify-between py-1 px-2 bg-gray-700 h-10\">\n        <div\n          className={[\n            \"w-5 h-5 rounded-full\",\n            signedIn ? [\"bg-blue-300 \"] : [],\n          ].join(\" \")}\n        />\n        {signedIn ? (\n          <div className=\"w-fit\">\n            <AuthButton type=\"signOut\" />\n          </div>\n        ) : (\n          <Link\n            href=\"/examples/service-e-commerce/sign-in\"\n            className=\"border border-gray-500 px-4 rounded-md hover:text-blue-300\"\n          >\n            sign in\n          </Link>\n        )}\n      </header>\n      <div className=\"py-4 px-2 flex flex-col gap-4\">\n        {cart}\n        {children}\n      </div>\n      {dialog}\n    </PageWrapper>\n  );\n}\n",
    "(admin)/layout.tsx": "import { notFound } from \"next/navigation\";\nimport { PageWrapper } from \"../_components/pageWrapper\";\nimport { isSignIn } from \"../_utils/auth\";\nimport { type PropsWithChildren } from \"react\";\n\nexport default async function layout({ children }: PropsWithChildren) {\n  const signedIn = await isSignIn();\n\n  if (!signedIn) {\n    return notFound();\n  }\n\n  return (\n    <PageWrapper>\n      <div className=\"bg-orange-800\">\n        <h2 className=\"text-lg text-center\">Admin</h2>\n      </div>\n      <div className=\"py-4 px-2\">{children}</div>\n    </PageWrapper>\n  );\n}\n",
    "(public)/sign-in/page.tsx": "import { AuthButton } from \"../../_components/authButton\";\n\nexport default function Page() {\n  return (\n    <div className=\"flex flex-col items-center gap-6\">\n      <h2 className=\"text-lg font-semibold\">Welcome!</h2>\n      <div className=\"w-40\">\n        <AuthButton type=\"signIn\" />\n      </div>\n    </div>\n  );\n}\n",
    "(public)/@dialog/default.tsx": "export default function Default() {\n  return null;\n}\n",
    "(public)/@cart/page.tsx": "import { Suspense } from \"react\";\nimport { Section } from \"../../_components/section\";\nimport { ImageSkeletons } from \"../../_components/skeleton\";\nimport { ImageList, ImageItem } from \"../../_components/imageList\";\nimport { items } from \"../../mock\";\nimport { isSignIn } from \"../../_utils/auth\";\n\nexport default async function Page() {\n  const signedIn = await isSignIn();\n\n  if (!signedIn) {\n    return null;\n  }\n\n  return (\n    <Section title=\"Your Cart\">\n      <Suspense fallback={<ImageSkeletons num={3} />}>\n        <Items />\n      </Suspense>\n    </Section>\n  );\n}\n\nasync function Items() {\n  // e.g. fetch\n  const allItems = await new Promise<(typeof items)[number][]>((resolve) => {\n    setTimeout(() => resolve(items.filter(({ id }) => id === 1)), 3000);\n  });\n\n  return (\n    <ImageList>\n      {allItems.map(({ id, thumbnail }) => (\n        <ImageItem id={id} thumbnail={thumbnail} key={id} />\n      ))}\n    </ImageList>\n  );\n}\n",
    "(public)/@cart/default.tsx": "export default function Default() {\n  return null;\n}\n",
    "(admin)/admin/page.tsx": "import { convertFilePathToURLParam } from \"@/app/_utils/filePath\";\nimport Link from \"next/link\";\n\nexport default function Page() {\n  return (\n    <div>\n      <p>\n        Here is an admin page isolated from \"(public)\" root layout, and\n        \"(admin)\" root layout validates the cookie so all pages under \"(admin)\"\n        can't access from non-admin users.\n      </p>\n      <Link\n        href={`/examples/service-e-commerce/admin?file-path=${convertFilePathToURLParam(\n          \"(admin)/layout.tsx\"\n        )}`}\n      >\n        check\n      </Link>\n    </div>\n  );\n}\n",
    "(public)/foods/[itemId]/page.tsx": "type Props = {\n  params: {\n    itemId: string;\n  };\n};\n\nexport default function Page({ params }: Props) {\n  return (\n    <div className=\"flex\">\n      <h2 className=\"text-lg font-semibold\">{params.itemId}</h2>\n    </div>\n  );\n}\n",
    "(public)/@dialog/_components/dialog.tsx": "\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { type PropsWithChildren } from \"react\";\n\nexport function Dialog({ children }: PropsWithChildren) {\n  const router = useRouter();\n\n  return (\n    <div className=\"absolute top-0 w-full h-full bg-gray-800 bg-opacity-75 flex justify-center items-center\">\n      <div className=\"w-10/12 h-3/4  bg-slate-700 rounded-md p-6 relative\">\n        <button\n          className=\"absolute right-2 top-1 hover:text-blue-300\"\n          onClick={() => {\n            router.back();\n          }}\n        >\n          close\n        </button>\n        <div className=\"mt-2 h-full\">{children}</div>\n      </div>\n    </div>\n  );\n}\n",
    "(public)/@dialog/(..)service-e-commerce/sign-in/page.tsx": "\"use client\";\n\nimport { AuthButton } from \"../../../../_components/authButton\";\nimport { Button } from \"../../../../_components/button\";\nimport { Dialog } from \"../../_components/dialog\";\n\nexport default function Page() {\n  return (\n    <Dialog>\n      <div className=\"flex flex-col items-center justify-center h-full\">\n        <div className=\"flex flex-col gap-5 w-full\">\n          <AuthButton type=\"signIn\" isInterceptingRouter />\n          <Button\n            onClick={() => {\n              window.location.reload();\n            }}\n          >\n            Go to sign-in page\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n",
    "(public)/@dialog/(..)service-e-commerce/foods/[itemId]/page.tsx": "import { Suspense } from \"react\";\nimport { Dialog } from \"../../../_components/dialog\";\nimport { Item, items } from \"../../../../../mock\";\n\ntype Props = {\n  params: {\n    itemId: string;\n  };\n};\n\nexport default function Page({ params }: Props) {\n  return (\n    <Dialog>\n      <Suspense fallback={<A id={0} name=\"aa\" thumbnail=\"üêï\" description=\"\" />}>\n        <Main id={params.itemId} />\n      </Suspense>\n    </Dialog>\n  );\n}\n\nasync function Main({ id }: { id: string }) {\n  const item = await new Promise<Item>((resolve, reject) => {\n    setTimeout(() => {\n      const item = items.find((item) => item.id === Number(id));\n\n      if (!item) {\n        reject(new Error(\"Item not found\"));\n      } else {\n        resolve(item);\n      }\n    }, 1000);\n  });\n\n  return <A {...item} />;\n}\n\n// TODO: skeleton\nfunction A({ name, description, thumbnail }: Item) {\n  return (\n    <div className=\"flex flex-col gap-8\">\n      <div className=\"flex gap-4 items-center\">\n        <span className=\"text-4xl\">{thumbnail}</span>\n        <h2>{name}</h2>\n      </div>\n      <p>{description}</p>\n    </div>\n  );\n}\n"
  }
}